//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cStiLib.ExService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExDesign", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Core")]
    [System.SerializableAttribute()]
    public partial struct ExDesign : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Color bgcolorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int blockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float brestTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.SLInterpolation[] conditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float durTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.ExPara[] exParaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.ExType[] exTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float posTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float preTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float srestTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] stimuliField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float trestTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int trialField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Color bgcolor {
            get {
                return this.bgcolorField;
            }
            set {
                if ((this.bgcolorField.Equals(value) != true)) {
                    this.bgcolorField = value;
                    this.RaisePropertyChanged("bgcolor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int block {
            get {
                return this.blockField;
            }
            set {
                if ((this.blockField.Equals(value) != true)) {
                    this.blockField = value;
                    this.RaisePropertyChanged("block");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float brestT {
            get {
                return this.brestTField;
            }
            set {
                if ((this.brestTField.Equals(value) != true)) {
                    this.brestTField = value;
                    this.RaisePropertyChanged("brestT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.SLInterpolation[] condition {
            get {
                return this.conditionField;
            }
            set {
                if ((object.ReferenceEquals(this.conditionField, value) != true)) {
                    this.conditionField = value;
                    this.RaisePropertyChanged("condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float durT {
            get {
                return this.durTField;
            }
            set {
                if ((this.durTField.Equals(value) != true)) {
                    this.durTField = value;
                    this.RaisePropertyChanged("durT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.ExPara[] exPara {
            get {
                return this.exParaField;
            }
            set {
                if ((object.ReferenceEquals(this.exParaField, value) != true)) {
                    this.exParaField = value;
                    this.RaisePropertyChanged("exPara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.ExType[] exType {
            get {
                return this.exTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.exTypeField, value) != true)) {
                    this.exTypeField = value;
                    this.RaisePropertyChanged("exType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float posT {
            get {
                return this.posTField;
            }
            set {
                if ((this.posTField.Equals(value) != true)) {
                    this.posTField = value;
                    this.RaisePropertyChanged("posT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float preT {
            get {
                return this.preTField;
            }
            set {
                if ((this.preTField.Equals(value) != true)) {
                    this.preTField = value;
                    this.RaisePropertyChanged("preT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float srestT {
            get {
                return this.srestTField;
            }
            set {
                if ((this.srestTField.Equals(value) != true)) {
                    this.srestTField = value;
                    this.RaisePropertyChanged("srestT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] stimuli {
            get {
                return this.stimuliField;
            }
            set {
                if ((object.ReferenceEquals(this.stimuliField, value) != true)) {
                    this.stimuliField = value;
                    this.RaisePropertyChanged("stimuli");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float trestT {
            get {
                return this.trestTField;
            }
            set {
                if ((this.trestTField.Equals(value) != true)) {
                    this.trestTField = value;
                    this.RaisePropertyChanged("trestT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int trial {
            get {
                return this.trialField;
            }
            set {
                if ((this.trialField.Equals(value) != true)) {
                    this.trialField = value;
                    this.RaisePropertyChanged("trial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Color", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Xna.Framework.Graphics")]
    [System.SerializableAttribute()]
    public partial struct Color : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private uint packedValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint packedValue {
            get {
                return this.packedValueField;
            }
            set {
                if ((this.packedValueField.Equals(value) != true)) {
                    this.packedValueField = value;
                    this.RaisePropertyChanged("packedValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SLInterpolation", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Core")]
    [System.SerializableAttribute()]
    public partial struct SLInterpolation : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float EndValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Interpolation MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StartValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueNField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float EndValue {
            get {
                return this.EndValueField;
            }
            set {
                if ((this.EndValueField.Equals(value) != true)) {
                    this.EndValueField = value;
                    this.RaisePropertyChanged("EndValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Interpolation Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StartValue {
            get {
                return this.StartValueField;
            }
            set {
                if ((this.StartValueField.Equals(value) != true)) {
                    this.StartValueField = value;
                    this.RaisePropertyChanged("StartValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueN {
            get {
                return this.ValueNField;
            }
            set {
                if ((this.ValueNField.Equals(value) != true)) {
                    this.ValueNField = value;
                    this.RaisePropertyChanged("ValueN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExPara", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Core")]
    public enum ExPara : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Orientation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Direction = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Speed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Luminance = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contrast = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpatialFreq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpatialPhase = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TemporalFreq = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TemporalPhase = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Color = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disparity = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Size = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExType", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Core")]
    public enum ExType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dBar = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RF_dBar = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fBar = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RF_fBar = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dGrating = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fGrating = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plaid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RandomLine = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpticFlow = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two_dBar = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two_dGrating = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two_fBar = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two_fGrating = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Context = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RF = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Interpolation", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Core")]
    public enum Interpolation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linear = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Log2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Log10 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimitiveType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Xna.Framework.Graphics")]
    public enum PrimitiveType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PointList = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineList = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineStrip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TriangleList = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TriangleFan = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TriangleStrip = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VertexPositionColor", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Xna.Framework.Graphics")]
    [System.SerializableAttribute()]
    public partial struct VertexPositionColor : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private cStiLib.ExService.Color ColorField;
        
        private cStiLib.ExService.Vector3 PositionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public cStiLib.ExService.Color Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public cStiLib.ExService.Vector3 Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vector3", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Xna.Framework")]
    [System.SerializableAttribute()]
    public partial struct Vector3 : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private float XField;
        
        private float YField;
        
        private float ZField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BarPara", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    [System.SerializableAttribute()]
    public partial struct BarPara : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.vsBasePara BaseParaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float widthField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.vsBasePara BasePara {
            get {
                return this.BaseParaField;
            }
            set {
                if ((this.BaseParaField.Equals(value) != true)) {
                    this.BaseParaField = value;
                    this.RaisePropertyChanged("BasePara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vsBasePara", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    [System.SerializableAttribute()]
    public partial struct vsBasePara : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Vector3 centerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Color colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float diameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float directionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lifetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float orientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Vector3 orientation3DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.PrimitiveType primitivetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float rotationspeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Vector3 rotationspeed3DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float spaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float speedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Vector3 speed3DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool visibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.VSType vstypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Vector3 center {
            get {
                return this.centerField;
            }
            set {
                if ((this.centerField.Equals(value) != true)) {
                    this.centerField = value;
                    this.RaisePropertyChanged("center");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Color color {
            get {
                return this.colorField;
            }
            set {
                if ((this.colorField.Equals(value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contentname {
            get {
                return this.contentnameField;
            }
            set {
                if ((object.ReferenceEquals(this.contentnameField, value) != true)) {
                    this.contentnameField = value;
                    this.RaisePropertyChanged("contentname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float diameter {
            get {
                return this.diameterField;
            }
            set {
                if ((this.diameterField.Equals(value) != true)) {
                    this.diameterField = value;
                    this.RaisePropertyChanged("diameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float direction {
            get {
                return this.directionField;
            }
            set {
                if ((this.directionField.Equals(value) != true)) {
                    this.directionField = value;
                    this.RaisePropertyChanged("direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lifetime {
            get {
                return this.lifetimeField;
            }
            set {
                if ((this.lifetimeField.Equals(value) != true)) {
                    this.lifetimeField = value;
                    this.RaisePropertyChanged("lifetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float orientation {
            get {
                return this.orientationField;
            }
            set {
                if ((this.orientationField.Equals(value) != true)) {
                    this.orientationField = value;
                    this.RaisePropertyChanged("orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Vector3 orientation3D {
            get {
                return this.orientation3DField;
            }
            set {
                if ((this.orientation3DField.Equals(value) != true)) {
                    this.orientation3DField = value;
                    this.RaisePropertyChanged("orientation3D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.PrimitiveType primitivetype {
            get {
                return this.primitivetypeField;
            }
            set {
                if ((this.primitivetypeField.Equals(value) != true)) {
                    this.primitivetypeField = value;
                    this.RaisePropertyChanged("primitivetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float rotationspeed {
            get {
                return this.rotationspeedField;
            }
            set {
                if ((this.rotationspeedField.Equals(value) != true)) {
                    this.rotationspeedField = value;
                    this.RaisePropertyChanged("rotationspeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Vector3 rotationspeed3D {
            get {
                return this.rotationspeed3DField;
            }
            set {
                if ((this.rotationspeed3DField.Equals(value) != true)) {
                    this.rotationspeed3DField = value;
                    this.RaisePropertyChanged("rotationspeed3D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float space {
            get {
                return this.spaceField;
            }
            set {
                if ((this.spaceField.Equals(value) != true)) {
                    this.spaceField = value;
                    this.RaisePropertyChanged("space");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float speed {
            get {
                return this.speedField;
            }
            set {
                if ((this.speedField.Equals(value) != true)) {
                    this.speedField = value;
                    this.RaisePropertyChanged("speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Vector3 speed3D {
            get {
                return this.speed3DField;
            }
            set {
                if ((this.speed3DField.Equals(value) != true)) {
                    this.speed3DField = value;
                    this.RaisePropertyChanged("speed3D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool visible {
            get {
                return this.visibleField;
            }
            set {
                if ((this.visibleField.Equals(value) != true)) {
                    this.visibleField = value;
                    this.RaisePropertyChanged("visible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.VSType vstype {
            get {
                return this.vstypeField;
            }
            set {
                if ((this.vstypeField.Equals(value) != true)) {
                    this.vstypeField = value;
                    this.RaisePropertyChanged("vstype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VSType", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    public enum VSType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bar = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grating = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primitive = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLModel = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLQuad = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLVideo = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VSCollection = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mask = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GratingPara", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    [System.SerializableAttribute()]
    public partial struct GratingPara : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.vsBasePara BaseParaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float contrastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.GratingType gratingtypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Color lhcolorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float luminanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.MaskPara maskparaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.MoveType movetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Color rlcolorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float sfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.Shape shapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float sphaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float tfField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.vsBasePara BasePara {
            get {
                return this.BaseParaField;
            }
            set {
                if ((this.BaseParaField.Equals(value) != true)) {
                    this.BaseParaField = value;
                    this.RaisePropertyChanged("BasePara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float contrast {
            get {
                return this.contrastField;
            }
            set {
                if ((this.contrastField.Equals(value) != true)) {
                    this.contrastField = value;
                    this.RaisePropertyChanged("contrast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.GratingType gratingtype {
            get {
                return this.gratingtypeField;
            }
            set {
                if ((this.gratingtypeField.Equals(value) != true)) {
                    this.gratingtypeField = value;
                    this.RaisePropertyChanged("gratingtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Color lhcolor {
            get {
                return this.lhcolorField;
            }
            set {
                if ((this.lhcolorField.Equals(value) != true)) {
                    this.lhcolorField = value;
                    this.RaisePropertyChanged("lhcolor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float luminance {
            get {
                return this.luminanceField;
            }
            set {
                if ((this.luminanceField.Equals(value) != true)) {
                    this.luminanceField = value;
                    this.RaisePropertyChanged("luminance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.MaskPara maskpara {
            get {
                return this.maskparaField;
            }
            set {
                if ((this.maskparaField.Equals(value) != true)) {
                    this.maskparaField = value;
                    this.RaisePropertyChanged("maskpara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.MoveType movetype {
            get {
                return this.movetypeField;
            }
            set {
                if ((this.movetypeField.Equals(value) != true)) {
                    this.movetypeField = value;
                    this.RaisePropertyChanged("movetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resolution {
            get {
                return this.resolutionField;
            }
            set {
                if ((this.resolutionField.Equals(value) != true)) {
                    this.resolutionField = value;
                    this.RaisePropertyChanged("resolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Color rlcolor {
            get {
                return this.rlcolorField;
            }
            set {
                if ((this.rlcolorField.Equals(value) != true)) {
                    this.rlcolorField = value;
                    this.RaisePropertyChanged("rlcolor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float sf {
            get {
                return this.sfField;
            }
            set {
                if ((this.sfField.Equals(value) != true)) {
                    this.sfField = value;
                    this.RaisePropertyChanged("sf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.Shape shape {
            get {
                return this.shapeField;
            }
            set {
                if ((this.shapeField.Equals(value) != true)) {
                    this.shapeField = value;
                    this.RaisePropertyChanged("shape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float sphase {
            get {
                return this.sphaseField;
            }
            set {
                if ((this.sphaseField.Equals(value) != true)) {
                    this.sphaseField = value;
                    this.RaisePropertyChanged("sphase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float tf {
            get {
                return this.tfField;
            }
            set {
                if ((this.tfField.Equals(value) != true)) {
                    this.tfField = value;
                    this.RaisePropertyChanged("tf");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaskPara", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    [System.SerializableAttribute()]
    public partial struct MaskPara : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.vsBasePara BaseParaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.MaskType masktypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.vsBasePara BasePara {
            get {
                return this.BaseParaField;
            }
            set {
                if ((this.BaseParaField.Equals(value) != true)) {
                    this.BaseParaField = value;
                    this.RaisePropertyChanged("BasePara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.MaskType masktype {
            get {
                return this.masktypeField;
            }
            set {
                if ((this.masktypeField.Equals(value) != true)) {
                    this.masktypeField = value;
                    this.RaisePropertyChanged("masktype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GratingType", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    public enum GratingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sinusoidal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linear = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Square = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoveType", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    public enum MoveType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drifting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standing = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shape", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    public enum Shape : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Point = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Curve = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Triangle = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rectangle = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quadrate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cuboid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cube = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ellipse = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circle = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ellipsoid = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sphere = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cone = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cylinder = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaskType", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    public enum MaskType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gaussian = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimitivePara", Namespace="http://schemas.datacontract.org/2004/07/StiLib.Vision")]
    [System.SerializableAttribute()]
    public partial struct PrimitivePara : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.vsBasePara BaseParaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] indicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private cStiLib.ExService.VertexPositionColor[] verticesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.vsBasePara BasePara {
            get {
                return this.BaseParaField;
            }
            set {
                if ((this.BaseParaField.Equals(value) != true)) {
                    this.BaseParaField = value;
                    this.RaisePropertyChanged("BasePara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] indices {
            get {
                return this.indicesField;
            }
            set {
                if ((object.ReferenceEquals(this.indicesField, value) != true)) {
                    this.indicesField = value;
                    this.RaisePropertyChanged("indices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public cStiLib.ExService.VertexPositionColor[] vertices {
            get {
                return this.verticesField;
            }
            set {
                if ((object.ReferenceEquals(this.verticesField, value) != true)) {
                    this.verticesField = value;
                    this.RaisePropertyChanged("vertices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExService.IExService", CallbackContract=typeof(cStiLib.ExService.IExServiceCallback))]
    public interface IExService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Invoke", ReplyAction="http://tempuri.org/IExService/InvokeResponse")]
        string Invoke(string ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/InvokeScript", ReplyAction="http://tempuri.org/IExService/InvokeScriptResponse")]
        string InvokeScript(string ex, string script);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetEx", ReplyAction="http://tempuri.org/IExService/GetExResponse")]
        string[] GetEx();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Terminate", ReplyAction="http://tempuri.org/IExService/TerminateResponse")]
        string Terminate(string ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/get_RunStop", ReplyAction="http://tempuri.org/IExService/get_RunStopResponse")]
        bool get_RunStop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/set_RunStop", ReplyAction="http://tempuri.org/IExService/set_RunStopResponse")]
        void set_RunStop(bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Subscribe", ReplyAction="http://tempuri.org/IExService/SubscribeResponse")]
        string Subscribe(bool sub_unsub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetExType", ReplyAction="http://tempuri.org/IExService/GetExTypeResponse")]
        string GetExType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Set", ReplyAction="http://tempuri.org/IExService/SetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExDesign))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Interpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Color))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitiveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.BarPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.vsBasePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VSType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MoveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Shape))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitivePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Vector3))]
        string Set(string target, string property, object value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/SetMany", ReplyAction="http://tempuri.org/IExService/SetManyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExDesign))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Interpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Color))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitiveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.BarPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.vsBasePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VSType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MoveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Shape))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitivePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Vector3))]
        string SetMany(string target, object[] propertyvaluepairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Get", ReplyAction="http://tempuri.org/IExService/GetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExDesign))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Interpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Color))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitiveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.BarPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.vsBasePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VSType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MoveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Shape))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitivePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Vector3))]
        object Get(string target, string property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetMany", ReplyAction="http://tempuri.org/IExService/GetManyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExDesign))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.SLInterpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Interpolation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.ExType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Color))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitiveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VertexPositionColor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.BarPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.vsBasePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.VSType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.GratingType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskPara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MaskType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.MoveType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Shape))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.PrimitivePara))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(cStiLib.ExService.Vector3))]
        object[] GetMany(string target, string[] properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/SetExDesign", ReplyAction="http://tempuri.org/IExService/SetExDesignResponse")]
        string SetExDesign(int index, cStiLib.ExService.ExDesign exdesign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetExDesign", ReplyAction="http://tempuri.org/IExService/GetExDesignResponse")]
        cStiLib.ExService.ExDesign GetExDesign(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/SetBar", ReplyAction="http://tempuri.org/IExService/SetBarResponse")]
        string SetBar(int index, cStiLib.ExService.BarPara barpara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetBar", ReplyAction="http://tempuri.org/IExService/GetBarResponse")]
        cStiLib.ExService.BarPara GetBar(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/SetGrating", ReplyAction="http://tempuri.org/IExService/SetGratingResponse")]
        string SetGrating(int index, cStiLib.ExService.GratingPara gratingpara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetGrating", ReplyAction="http://tempuri.org/IExService/GetGratingResponse")]
        cStiLib.ExService.GratingPara GetGrating(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/SetPrimitive", ReplyAction="http://tempuri.org/IExService/SetPrimitiveResponse")]
        string SetPrimitive(int index, cStiLib.ExService.PrimitivePara primitivepara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetPrimitive", ReplyAction="http://tempuri.org/IExService/GetPrimitiveResponse")]
        cStiLib.ExService.PrimitivePara GetPrimitive(int index);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IExServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/OnRunStop", ReplyAction="http://tempuri.org/IExService/OnRunStopResponse")]
        string OnRunStop(bool runstop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/OnServiceDispose", ReplyAction="http://tempuri.org/IExService/OnServiceDisposeResponse")]
        void OnServiceDispose();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IExServiceChannel : cStiLib.ExService.IExService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ExServiceClient : System.ServiceModel.DuplexClientBase<cStiLib.ExService.IExService>, cStiLib.ExService.IExService {
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Invoke(string ex) {
            return base.Channel.Invoke(ex);
        }
        
        public string InvokeScript(string ex, string script) {
            return base.Channel.InvokeScript(ex, script);
        }
        
        public string[] GetEx() {
            return base.Channel.GetEx();
        }
        
        public string Terminate(string ex) {
            return base.Channel.Terminate(ex);
        }
        
        public bool get_RunStop() {
            return base.Channel.get_RunStop();
        }
        
        public void set_RunStop(bool value) {
            base.Channel.set_RunStop(value);
        }
        
        public string Subscribe(bool sub_unsub) {
            return base.Channel.Subscribe(sub_unsub);
        }
        
        public string GetExType() {
            return base.Channel.GetExType();
        }
        
        public string Set(string target, string property, object value) {
            return base.Channel.Set(target, property, value);
        }
        
        public string SetMany(string target, object[] propertyvaluepairs) {
            return base.Channel.SetMany(target, propertyvaluepairs);
        }
        
        public object Get(string target, string property) {
            return base.Channel.Get(target, property);
        }
        
        public object[] GetMany(string target, string[] properties) {
            return base.Channel.GetMany(target, properties);
        }
        
        public string SetExDesign(int index, cStiLib.ExService.ExDesign exdesign) {
            return base.Channel.SetExDesign(index, exdesign);
        }
        
        public cStiLib.ExService.ExDesign GetExDesign(int index) {
            return base.Channel.GetExDesign(index);
        }
        
        public string SetBar(int index, cStiLib.ExService.BarPara barpara) {
            return base.Channel.SetBar(index, barpara);
        }
        
        public cStiLib.ExService.BarPara GetBar(int index) {
            return base.Channel.GetBar(index);
        }
        
        public string SetGrating(int index, cStiLib.ExService.GratingPara gratingpara) {
            return base.Channel.SetGrating(index, gratingpara);
        }
        
        public cStiLib.ExService.GratingPara GetGrating(int index) {
            return base.Channel.GetGrating(index);
        }
        
        public string SetPrimitive(int index, cStiLib.ExService.PrimitivePara primitivepara) {
            return base.Channel.SetPrimitive(index, primitivepara);
        }
        
        public cStiLib.ExService.PrimitivePara GetPrimitive(int index) {
            return base.Channel.GetPrimitive(index);
        }
    }
}
